apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        deployment.kubernetes.io/revision: "3"
    labels:
        app: {{ .Release.Name }}{{ .Values.server.web.service.name }}
    name: {{ .Release.Name }}-{{ .Values.server.web.service.name }}
    namespace: {{ .Values.server.web.service.default }}
spec:
    progressDeadlineSeconds: 600
    replicas: {{ .Values.server.web.service.replicas }}
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app: {{ .Values.server.web.service.name }}
    strategy:
        rollingUpdate:
            maxSurge: {{ .Values.server.web.service.maxSurge }}
            maxUnavailable: {{ .Values.server.web.service.maxUnavailable }}
        type: RollingUpdate
    template:
        metadata:
            labels:
                app: {{ .Values.server.web.service.name }}
        spec:
            containers:
                - image: codebuds/deno-webserver:1.6.0
                  imagePullPolicy: Always
                  name: {{ .Values.server.web.service.name }}
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  env:
                      - name: MARIADB_HOST
                        value: {{ .Release.Name }}-{{ .Values.server.mariadb.service.name }}
                  volumeMounts:
                      - mountPath: /srv/app/pvc
                        name: {{ .Release.Name }}-logs
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
            volumes:
                - name: {{ .Release.Name }}-logs
                  persistentVolumeClaim:
                      claimName: {{ .Release.Name }}-logs
