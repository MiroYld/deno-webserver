apiVersion: apps/v1
kind: Deployment
metadata:
    annotations:
        deployment.kubernetes.io/revision: "3"
        kubectl.kubernetes.io/last-applied-configuration: |
            {"apiVersion":"apps/v1","kind":"Deployment","metadata":{"annotations":{"deployment.kubernetes.io/revision":"1"},"generation":1,"labels":{"app":"deno-webserver"},"name":"deno-webserver","namespace":"default","uid":"04a746c4-41a1-4ad3-9256-caa0176da61b"},"spec":{"progressDeadlineSeconds":600,"replicas":1,"revisionHistoryLimit":10,"selector":{"matchLabels":{"app":"deno-webserver"}},"strategy":{"rollingUpdate":{"maxSurge":"25%","maxUnavailable":"25%"},"type":"RollingUpdate"},"template":{"metadata":{"creationTimestamp":null,"labels":{"app":"deno-webserver"}},"spec":{"containers":[{"image":"codebuds/deno-webserver:latest","imagePullPolicy":"Always","name":"deno-webserver","resources":{},"terminationMessagePath":"/dev/termination-log","terminationMessagePolicy":"File"}],"dnsPolicy":"ClusterFirst","restartPolicy":"Always","schedulerName":"default-scheduler","securityContext":{},"terminationGracePeriodSeconds":30}}},"status":{"availableReplicas":1,"conditions":[{"lastTransitionTime":"2022-03-13T17:52:08Z","lastUpdateTime":"2022-03-13T17:52:08Z","message":"Deployment has minimum availability.","reason":"MinimumReplicasAvailable","status":"True","type":"Available"},{"lastTransitionTime":"2022-03-13T17:52:00Z","lastUpdateTime":"2022-03-13T17:52:08Z","message":"ReplicaSet \"deno-webserver-7d4999f6cf\" has successfully progressed.","reason":"NewReplicaSetAvailable","status":"True","type":"Progressing"}],"observedGeneration":1,"readyReplicas":1,"replicas":1,"updatedReplicas":1}}
    labels:
        app: {{ .Release.Name }}{{ .Values.server.web.service.name }}
    name: {{ .Release.Name }}-{{ .Values.server.web.service.name }}
    namespace: {{ .Values.server.web.service.default }}
spec:
    progressDeadlineSeconds: 600
    replicas: {{ .Values.server.web.service.replicas }}
    revisionHistoryLimit: 10
    selector:
        matchLabels:
            app: {{ .Values.server.web.service.name }}
    strategy:
        rollingUpdate:
            maxSurge: {{ .Values.server.web.service.maxSurge }}
            maxUnavailable: {{ .Values.server.web.service.maxUnavailable }}
        type: RollingUpdate
    template:
        metadata:
            labels:
                app: {{ .Values.server.web.service.name }}
        spec:
            containers:
                - image: codebuds/deno-webserver:1.3.1
                  imagePullPolicy: Always
                  name: {{ .Values.server.web.service.name }}
                  resources: {}
                  terminationMessagePath: /dev/termination-log
                  terminationMessagePolicy: File
                  volumeMounts:
                      - mountPath: /srv/app/pvc
                        name: {{ .Release.Name }}-logs
            dnsPolicy: ClusterFirst
            restartPolicy: Always
            schedulerName: default-scheduler
            securityContext: {}
            terminationGracePeriodSeconds: 30
            volumes:
                - name: {{ .Release.Name }}-logs
                  persistentVolumeClaim:
                      claimName: {{ .Release.Name }}-logs
 
---
apiVersion: v1
kind: PersistentVolume
metadata:
    name: {{ .Release.Name }}-{{ .Values.deno.pv.name }}
spec:
    accessModes:
        - ReadWriteOnce
    persistentVolumeReclaimPolicy: Retain
    storageClassName: standard
    capacity:
        storage: {{ .Values.deno.pv.size }}
    hostPath:
        path: {{ .Values.deno.pv.path }}
 
---
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
    name: {{ .Release.Name }}-logs
    namespace: default
spec:
    accessModes:
        - ReadWriteOnce
    resources:
        requests:
            storage: {{ .Values.deno.pvc.size }}
---
apiVersion: v1
kind: Service
metadata:
  name: {{ .Release.Name }}-{{ .Values.server.web.service.name }}
spec:
  type: {{ .Values.server.web.service.type }}
  ports:
    - port: {{ .Values.server.web.service.port }}
  selector:
    app: {{ .Values.server.web.service.name }}